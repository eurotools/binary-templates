//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: Nintendo TPL texture format for the GameCube
//   Authors: Swyter
//   Version: 2023.10.22
//  Category: Game
// File Mask: *.tpl
//  ID Bytes: 00 20 AF 30
//------------------------------------------------

BigEndian();

uint32 magic <format=hex>; /* swy: 00 20 AF 30 */
uint32 texture_count;
uint32 tpl_header_size;

struct
{
    uint32 texture_desc_pos_offset;
    uint32 palette_pos_offset;
} texture[texture_count] <open=true>;

struct
{
    uint16 pal_table_size;
    uint16 zero;
    uint32 format;
    uint32 sum_size;
    ubyte stuff[sum_size];
} palette[texture[0].palette_pos_offset ? 1 : 0] <open=true, optimize=false>;

struct
{
    uint16 layer_height,
           layer_width;
    enum <uint32>
    {
        
        FMT_I4,    /* swy: Greyscale */
        FMT_I8,    /* swy: Greyscale */
        FMT_IA4,   /* swy: Greyscale + Alpha */
        FMT_IA8,   /* swy: Greyscale + Alpha */
        FMT_RGB,   /* swy: 565 ; R5G6B5   */
        FMT_xRGBA, /* swy: 4443; R4G4B4A3 */
        FMT_RGBA,  /* swy: 8888; R8G8B8A8 */
        FMT_7,
        FMT_C4,    /* swy:    16 Colours RGB565 */ /*  4-bit color indices */
        FMT_C8,    /* swy:   256 Colours RGB565 */ /*  8-bit color indices */
        FMT_C14X2, /* swy: 16384 Colours RGB565 */ /* 14-bit color indices in 16-bit/2-bytes with 2 wasted bits; weird format that was unimplemented in Euroland and mapped to S3TC, D3D doesn't have a D3DFMT_P16, only D3DFMT_P8 */
        FMT_11,
        FMT_12,
        FMT_13,
        FMT_S3TC,  /* swy: S3 Texture Compression, same as DXT1 or BC1, 4x4 texel blocks, 4-bit per texel, two interpolated RGB565 colors (turning them into a palette of 3+alpha or 4 indexed colors) with optionally 1-bit cutout alpha */
        FMT_15,
        FMT_16,
    } texel_format;
    uint32 compressed_size;
    enum <uint32>
    {
        coords_clamp,
        coords_repeat
    } wrap_s, wrap_t; /* swy: when wrap is on the texture tiles in that UV space dimension, otherwise the border/edge color will appear forever */
    uint32 texel_fmt_result;
    uint32 always_one_uint;
    uint32 always_zero_uint;
    ubyte always_zero_byte;
    ubyte base_lod, last_lod;
    ubyte pad_garbage_data_maybe;
} texture_descriptor[1] <open=true>;

ubyte align_garbage_data[8];

ubyte mipmap_data[8*8];